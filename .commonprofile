################################################################################
# @name: .commonprofile
# @author: Eli Gundry
# => A shared settings file for all my shells
################################################################################

################################################################################
# => Custom Functions
################################################################################

pathadd() {
	if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
		PATH="${PATH:+"$PATH:"}$1"
	fi
}

command_exists() {
	type "$1" &> /dev/null ;
}

# Extract a value from a Pass file
# ex: pass google.com | pass_get_key "Recovery Codes"
pass_get_key() {
    local key="$1"

    if [ -z "$key" ]; then
        echo "must provide a key to extract"
        return 1
    fi

    if [ "$key" = "password" ]; then
        head -n 1 | tr -d '\n'
        return 0
    fi

    command_exists shyaml
    local shyaml_installed=$?

    if [ $shyaml_installed -gt 0 ]; then
        pip3 install shyaml
    fi

    tail -n +2 | shyaml get-value "$key"
}

################################################################################
# => Pyenv
################################################################################

# export PYENV_DEBUG=1
export PYENV_ROOT="$HOME/.pyenv"
pathadd "$PYENV_ROOT/bin"
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
if command_exists pyenv; then
    eval "$(pyenv init - --no-rehash)"
    eval "$(pyenv virtualenv-init -)"
fi

################################################################################
# => fnm
# https://github.com/Schniz/fnm
################################################################################

eval "$(fnm env --use-on-cd --log-level quiet)"

################################################################################
# => Google Cloud SDK
################################################################################

# source "$HOME/.google-cloud-sdk/completion.zsh.inc"
# source "$HOME/.google-cloud-sdk/path.zsh.inc"

################################################################################
# => Homebrew
################################################################################

# EDG 2019-08-13: For some reason, MacOS ZSH isn't including the Homebrew bin
# path, which breaks everything. Adding it manually seems to fix the issue.

pathadd /usr/local/bin

################################################################################
# => Go
################################################################################

export GOPATH="$HOME/Code/go"
pathadd "$GOPATH/bin"
pathadd /usr/local/go/bin

################################################################################
# => Default Variables
################################################################################

export BROWSER=google-chrome-stable
export DOTS=$HOME/dots
export INPUTRC=$HOME/.inputrc
export LANG=en_US.UTF-8
export MANPAGER=less
export PAGER=less

if command_exists nvim; then
	export EDITOR=nvim
	export VISUAL=nvim
else
	export EDITOR=vim
	export VISUAL=vim
fi

# Turn off flow control
stty -ixon

################################################################################
# => LESS Colors for Man
# http://linuxtidbits.wordpress.com/2009/03/23/less-colors-for-man-pages/
################################################################################

export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

################################################################################
# => /sbin Debian bullshit
#
# Debian likes to "hide" "privileged" programs outside of the path, thus you
# can't tab complete simple commands like ifconfig. Fuck that noise, we are
# consenting adults and don't need that bullshit.
################################################################################

pathadd "/sbin"
pathadd "/usr/sbin"

################################################################################
# => Shared Aliases
################################################################################

if command_exists nvim; then
	alias v='nvim'
	# This allows for piping of any command into vim like less. You exit with Q
	alias -g iv='| nvim -R -c ":map Q :q!<enter>" -'
else
	alias v='vim'
	alias -g iv='| vim -R -c ":map Q :q!<enter>" -'
fi

alias c='clear'
alias cp='cp -v'
alias ip='curl ifconfig.me/ip'
alias mkdir='mkdir -pv'
alias mv='mv -v'
alias rm='rm -v'
alias s='sudo'
alias highstate='sudo salt-call state.highstate'
alias state-apply='sudo salt-call state.apply'

# ls shortcuts
alias la='ls -A'
alias ll='ls -lh'
alias lla='ls -lAh'
alias lr='ls -R'
alias lar='ls -Arh'
alias l.='ls -d .*'

################################################################################
# => AWS Access Environment Variables
################################################################################

# if command_exists aws; then
#     export AWS_ACCESS_KEY_ID="$(aws configure get aws_access_key_id)"
#     export AWS_SECRET_ACCESS_KEY="$(aws configure get aws_secret_access_key)"
# fi
